rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
        return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /{document=**} {
      allow read, write: if isAdmin();
    }

    function signedIn() {
        return request.auth != null;
    }

    // Allow all users to check if they are admins
    match /admins/{adminUid} {
        allow read: if request.auth.uid == adminUid;
    }

    match /uploads/{uploadId} {
        allow read;
        allow write: if signedIn() && request.auth.uid == request.resource.data.userId;
    }

    match /{path=**}/entries/{entryId} {
        allow read;
    }

    match /{path=**}/teams/{teamId} {
        allow read;
    }

    match /events/{eventId} {
        allow read;
        allow update: if exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid))
        || (request.resource.data.entryRefs.size() == resource.data.entryRefs.size() + 1 && request.resource.data.entryRefs.hasAll(resource.data.entryRefs));
        allow delete: if exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid));

        match /owners/{ownerUid} {
            allow read: if request.auth.uid == ownerUid;
        }

        match /teams/{teamId} {
            allow write: if exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid));
        }

        match /entries/{entryId} {
            allow read;
            allow write: if exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid)) || request.auth.uid == request.resource.data.userId;
            allow delete: if exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid));
        }
    }
  }
}