rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAdmin() {
        return exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    function signedIn() {
        return request.auth != null;
    }

    // Allow all users to check if they are admins
    match /admins/{adminUid} {
        allow read: if request.auth.uid == adminUid;
    }

    // Disallows users from editing other's user documents
    match /users/{userId} {
        allow read;
        allow write: if signedIn() && request.auth.uid == userId;

        match /uploads/{uploadId} {
            allow read;
            allow write: if signedIn() && string(request.resource.data.user) == '/databases/' + database + '/documents/users/' + request.auth.uid;
        }

        match /entries/{entryId} {
            allow read;
            allow write: if signedIn() && request.auth.uid == userId;
        }
    }

    match /{path=**}/uploads/{uploadId} {
        allow read;
    }

    match /{path=**}/entries/{entryId} {
        allow read;
    }

    match /{path=**}/teams/{teamId} {
        allow read;
    }

    match /events/{eventId} {
        allow read;
        allow create: if isAdmin();
        allow update: if isAdmin()
        || exists(/databases/$(database)/documents/events/$(eventId)/owners/$(request.auth.uid))
        || (request.resource.data.entryRefs.size() == resource.data.entryRefs.size() + 1 && request.resource.data.entryRefs.hasAll(resource.data.entryRefs));
        match /owners/{ownerUid} {
            allow read: if request.auth.uid == ownerUid;
        }
    }
  }
}